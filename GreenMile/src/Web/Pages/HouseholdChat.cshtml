@page
@model HouseholdChatModel
@using Microsoft.AspNetCore.Identity
@using Web.Models
@using Web.Services
@inject UserManager<User> _userManager;
@inject MessageService _messageService;
@{
    var user = await _userManager.GetUserAsync(User);
    var userId = user?.Id;
    var householdId = user?.HouseholdId;
    var messages = await _messageService.GetMessagesByHouseholdId((int)householdId);
}
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.3.0/css/all.min.css" integrity="sha512-SzlrxWUlpfuzQ+pcUCosxcglQRNAq/DZjVsC0lE40xsADsfeQoEypE+enwcOiGjk/bSuGGKHEyjSoQ1zVisanQ==" crossorigin="anonymous" referrerpolicy="no-referrer" />
<input type="text" name="username" id="username" value='@(user.UserName)' hidden />
<input type="text" value='@(userId ?? "None")' id="userId" hidden />
<input type="text" value='@(householdId.ToString() ?? "None")' id="householdId" hidden>
<div class="container">
    <div class="row">
        <div class="col-2"></div>
        <div class="col-8">
            <div class="card my-3">
                <div class="card-header">
                    <h3>Chat</h3>
                </div>
                <div class="card-body">
                    <div id="messagesList" class="d-flex flex-column gap-3 align-items-start overflow-scroll"
                        style="max-height: 400px;">
                        @foreach (var message in messages)
                        {
                            @if (message.User.UserName != user.UserName)
                            {
                                <div class="text-white px-2 rounded" style="background-color: #33764e;" id="message_@message.Key">
                                    <div class="d-flex justify-content-between align-items-center">
                                        <strong id="username">@message.User.UserName</strong>
                                    </div>
                                    <div id="message" class="d-flex gap-3">
                                        <p class="text-white">@message.Text</p>
                                        <small class="small text-muted">@message.CreatedAt.ToShortTimeString()</small>
                                    </div>
                                </div>
                            }
                            else
                            {
                                <div class="px-2 border rounded ms-auto" id="message_@message.Key" >
                                    <div class="d-flex justify-content-between align-items-center">
                                        <strong id="username">@message.User.UserName</strong>
                                        <i class="fa fa-trash" onclick="deleteMessage(this)" onmouseover="this.style.color = '#ef4444'" onmouseout="this.style.color = '#7E7E7E'"></i>
                                    </div>
                                    <div id="message" class="d-flex gap-3">
                                        <p>@message.Text</p>
                                        <small class="small text-muted">@message.CreatedAt.ToShortTimeString()</small>
                                    </div>
                                </div>
                            }
                        }
                    </div>
                </div>
                <div class="card-footer">
                    <form class="d-flex gap-3" id="messageForm">
                        <input type="text" id="messageInput" placeholder="Enter message" class="form-control" style="background-color: #fafafa;">
                        <button class="btn" id="sendButton" value="Send">Send</button>
                    </form>
                </div>
            </div>
        </div>
        <div class="col-2"></div>
    </div>
</div>

<script src="~/js/signalr/dist/browser/signalr.js"></script>
<script src="~/js/chat.js"></script>
<script>
    var messageList = document.getElementById("messagesList");
    messageList.scrollTop = messageList.scrollHeight;
</script>